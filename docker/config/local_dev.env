# -------------------------------------------------------------
# Environment-specific configuration
# -------------------------------------------------------------

# These configuration variable values are for a local dev environment that
# uses docker-compose.
#
# To create configuration for a server environment, you can copy this file
# and then update the values with hosts, usernames, passwords, and such
# specific to the server environment you're setting up.

# alembic
# -------

alembic_config=/app/docker/config/alembic.ini
sqlalchemy.url=postgresql://postgres:aPassword@postgresql:5432/breakpad

# logging
# -------

# Set to 10 - DEBUG for local development
resource.logging.level=10

# postgres
# --------

resource.postgresql.database_hostname=postgresql
resource.postgresql.database_port=5432
secrets.postgresql.database_username=postgres
secrets.postgresql.database_password=aPassword

# metrics
# -------

resource.metrics.statsd_host=statsd
resource.metrics.markus_backends=markus.backends.logging.LoggingMetrics,markus.backends.statsd.StatsdMetrics

# sentry
# ------

# secrets.sentry.dsn=

# rabbitmq
# --------

resource.rabbitmq.host=rabbitmq
resource.rabbitmq.virtual_host=rabbitvhost
secrets.rabbitmq.rabbitmq_user=rabbituser
secrets.rabbitmq.rabbitmq_password=rabbitpwd

# elasticsearch
# -------------

resource.elasticsearch.elasticsearch_urls=http://elasticsearch:9200

# boto
# ----

resource.boto.host=localstack-s3
resource.boto.port=5000
resource.boto.access_key=foo
secrets.boto.secret_access_key=foo
resource.boto.bucket_name=dev_bucket
resource.boto.temporary_file_system_storage_path=/tmp
resource.boto.calling_format=boto.s3.connection.OrdinaryCallingFormat
resource.boto.resource_class=socorro.external.boto.connection_context.HostPortS3ConnectionContext

# processor
# ---------

# In the docker local dev environment, we store symbol cache and other things in /tmp because
# there's only one processor node. For server environments, we probably want to store that
# in a volume. These three vars are all affected.
companion_process.symbol_cache_path=/tmp/symbols/cache
processor.symbol_cache_path=/tmp/symbols/cache
processor.symbol_tmp_path=/tmp/symbols/tmp

# Drop kill_timeout to 30 because this is a dev environment and 5 minutes is
# a long time
processor.kill_timeout=30

# Set symbols_urls to something helpful for local dev
processor.symbols_urls=https://s3-us-west-2.amazonaws.com/org.mozilla.crash-stats.symbols-public/v1

# Stackwalker is in a different place in the new infra and local dev
processor.command_pathname=/stackwalk/stackwalker

# Set the telemetry bucket name explicitly
destination.telemetry.bucket_name=telemetry_bucket

# webapp
# ------

ALLOWED_HOSTS=localhost,webapp
AWS_HOST=localstack-s3
AWS_PORT=5000
AWS_ACCESS_KEY=foo
AWS_SECRET_ACCESS_KEY=foo
CACHE_LOCATION=memcached:11211
DATABASE_URL=postgres://postgres:aPassword@postgresql:5432/breakpad
ELASTICSEARCH_URLS=http://elasticsearch:9200
RABBITMQ_HOST=rabbitmq
RABBITMQ_USER=rabbituser
RABBITMQ_PASSWORD=rabbitpwd
RABBITMQ_VIRTUAL_HOST=rabbitvhost
RAVEN_DSN=
SECRET_KEY=secretkey
STATSD_HOST=statsd
TELEMETRY_BUCKET_NAME=telemetry_bucket
OVERVIEW_VERSION_URLS=http://localhost:8000/__version__

# crontabber
# ----------
crontabber.class-DependencySecurityCheckCronApp.nsp_path=/webapp-frontend-deps/node_modules/.bin/nsp
crontabber.class-DependencySecurityCheckCronApp.safety_path=/usr/local/bin/safety
crontabber.class-DependencySecurityCheckCronApp.package_json_path=/app/webapp-django/package.json
crontabber.class-UploadCrashReportJSONSchemaCronApp.bucket_name=telemetry_bucket

# oidcprovider
# ------------
OIDC_RP_CLIENT_ID=1
OIDC_RP_CLIENT_SECRET=bd01adf93cfb
OIDC_OP_AUTHORIZATION_ENDPOINT=http://oidcprovider:8080/openid/authorize
OIDC_OP_TOKEN_ENDPOINT=http://oidcprovider:8080/openid/token
OIDC_OP_USER_ENDPOINT=http://oidcprovider:8080/openid/userinfo
